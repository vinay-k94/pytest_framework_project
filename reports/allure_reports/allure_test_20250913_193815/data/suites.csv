"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Sep 13 19:38:08 IST 2025","Sat Sep 13 19:38:10 IST 2025","2726","tests.test_api.test_bunkers","test_create_bunker_enquiry","","","","test_create_bunker_enquiry_with_all_mandatory_fields","
        Test Case: List Users API - Validate Response Structure and Content

        Steps:
        1. Call the API to fetch a paginated list of users (page=1, size=10).
        2. Assert that the API call returns HTTP 200 (success).
        3. Assert that the response is a non-empty list.
        4. Assert that the
        first user object contains 'id' and 'name' keys.

        Purpose:
        - To verify that the user listing endpoint returns valid data and expected structure.
        - To ensure basic integrity of the user objects in the response.

        args: api (ApiDictionary): The API client instance for making requests.
    "
"passed","Sat Sep 13 19:38:10 IST 2025","Sat Sep 13 19:38:12 IST 2025","2019","tests.test_api.test_bunkers","test_create_bunker_enquiry","","","","test_create_duplicate_bunker_enquiry_with_same_fields","
        Test Case: List Users API - Validate Response Structure and Content

        Steps:
        1. Call the API to fetch a paginated list of users (page=1, size=10).
        2. Assert that the API call returns HTTP 200 (success).
        3. Assert that the response is a non-empty list.
        4. Assert that the
        first user object contains 'id' and 'name' keys.

        Purpose:
        - To verify that the user listing endpoint returns valid data and expected structure.
        - To ensure basic integrity of the user objects in the response.

        args: api (ApiDictionary): The API client instance for making requests.
    "
"passed","Sat Sep 13 19:38:14 IST 2025","Sat Sep 13 19:38:15 IST 2025","823","tests.test_api.test_bunkers","test_create_bunker_enquiry","","","","test_create_bunker_enquiry_negative_fields","
        Test Case: List Users API - Validate Response Structure and Content

        Steps:
        1. Call the API to fetch a paginated list of users (page=1, size=10).
        2. Assert that the API call returns HTTP 200 (success).
        3. Assert that the response is a non-empty list.
        4. Assert that the
        first user object contains 'id' and 'name' keys.

        Purpose:
        - To verify that the user listing endpoint returns valid data and expected structure.
        - To ensure basic integrity of the user objects in the response.

        args: api (ApiDictionary): The API client instance for making requests.
    "
"passed","Sat Sep 13 19:38:13 IST 2025","Sat Sep 13 19:38:14 IST 2025","906","tests.test_api.test_bunkers","test_create_bunker_enquiry","","","","test_create_bunker_enquiry_with_missing_mandatory_fields","
        Test Case: List Users API - Validate Response Structure and Content

        Steps:
        1. Call the API to fetch a paginated list of users (page=1, size=10).
        2. Assert that the API call returns HTTP 200 (success).
        3. Assert that the response is a non-empty list.
        4. Assert that the
        first user object contains 'id' and 'name' keys.

        Purpose:
        - To verify that the user listing endpoint returns valid data and expected structure.
        - To ensure basic integrity of the user objects in the response.

        args: api (ApiDictionary): The API client instance for making requests.
    "
"broken","Sat Sep 13 19:38:12 IST 2025","Sat Sep 13 19:38:13 IST 2025","568","tests.test_api.test_bunkers","test_create_bunker_enquiry","","","","test_create_bunker_enquiry_with_invalid_mandatory_fields","
        Test Case: List Users API - Validate Response Structure and Content

        Steps:
        1. Call the API to fetch a paginated list of users (page=1, size=10).
        2. Assert that the API call returns HTTP 200 (success).
        3. Assert that the response is a non-empty list.
        4. Assert that the
        first user object contains 'id' and 'name' keys.

        Purpose:
        - To verify that the user listing endpoint returns valid data and expected structure.
        - To ensure basic integrity of the user objects in the response.

        args: api (ApiDictionary): The API client instance for making requests.
    "
